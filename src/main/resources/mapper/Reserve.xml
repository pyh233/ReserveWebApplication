<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.psychroomserver.dao.ReserveDao">
    <cache type="org.mybatis.caches.redis.RedisCache">
        <property name="timeout" value="3600"/>
    </cache>
    <sql id="Columns">
        select id,
               status,
               comment,
               comment_time,
               reserve_time,
               course_id,
               user_id
        from reserve
    </sql>
    <resultMap id="ReserveMap" type="Reserve">
        <result column="course_id" property="courseId"/>
        <result column="user_id" property="userId"/>
        <association property="user" column="user_id" javaType="User"
                     select="com.example.psychroomserver.dao.UserDao.getUserById"></association>
        <association property="course" column="course_id" javaType="Course"
                     select="com.example.psychroomserver.dao.CourseDao.getCourseById"></association>
    </resultMap>
    <select id="getReserve" resultMap="ReserveMap">
<!--    <select id="getReserve" resultType="Reserve">-->
        <include refid="Columns"></include>
        <where>
            <if test="id!=null">
                and id=#{id}
            </if>
            <if test="status!=null">
                and status=#{status}
            </if>
        </where>
    </select>
    <insert id="addReserve" useGeneratedKeys="true" keyColumn="id" keyProperty="id" flushCache="true">
        insert into reserve(status, comment, comment_time, reserve_time, course_id, user_id)
        values (#{status}, #{comment}, #{commentTime}, #{reserveTime}, #{courseId}, #{userId})
    </insert>
    <delete id="deleteReserveByIds" flushCache="true">
        delete from reserve where id in
        <foreach collection="ids" open="(" separator="," close=")" item="id">#{id}</foreach>
    </delete>
    <update id="updateReserveStatus" flushCache="true">
        update reserve
        set status=#{status}
        where id = #{id}
    </update>
    <select id="getAllReserveByUid" useCache="true" resultType="Reserve">
        <include refid="Columns"></include>
        <where>user_id=#{uid}</where>
    </select>
</mapper>
