<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.psychroomserver.dao.RouteDao">
    <cache type="org.mybatis.caches.redis.RedisCache">
        <property name="timeout" value="3600"/>
    </cache>
    <sql id="Columns">
        select id,
               name,
               url,
               type
        from admin_route
    </sql>
    <select id="findRouteByPid" resultType="Route" useCache="true">
        <include refid="Columns"/>
        where id in (select route_id from admin_route_permission where permission_id=#{pid})
    </select>


    <select id="findAllRoutes" resultType="Route">
        <include refid="Columns"></include>
        <where>
            <if test="id!=null">
                and id=#{id}
            </if>
            <if test="nameLike!=null and nameLike!=''">
                <bind name="nameLikes" value="'%'+nameLike+'%'"/>
                and name like #{nameLikes}
            </if>
        </where>
    </select>
    <delete id="deleteRouteByIds" flushCache="true">
        delete from admin_route where id in
        <foreach collection="ids" separator="," open="(" close=")" item="id">#{id}</foreach>
    </delete>
    <insert id="addRoute" flushCache="true" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into admin_route(name,url,type) values (#{name},#{url},#{type})
    </insert>
    <update id="updateRoute" flushCache="true">
        update admin_route
        set name=#{name},
            url=#{url},
            type=#{type}
        where id = #{id}
    </update>
    <select id="findAll" resultType="Route" useCache="true">
        <include refid="Columns"></include>
    </select>
</mapper>
